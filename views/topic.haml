= haml :logo
.map-page
  .row-fluid
    .span8.column
      %ul.nav.nav-tabs
        %li
          %a{:href => '/'}
            %i.icon-home
        - @audience.topics.each do |slug|
          - topic = repository.topic_from_slug(slug)
          %li{:class => "#{'active' if @topic == topic}"}
            %a{:href => topic_path(@audience, topic)}= topic.name
      %script{:src => 'http://openlayers.org/api/OpenLayers.js'}
      #map
      :javascript
        $(document).ready(function() {
          $(".collapse").collapse();
          var map = new OpenLayers.Map('map');
          var layer = new OpenLayers.Layer.OSM("Simple OSM Map");
          map.addLayer(layer);
          map.setCenter(new OpenLayers.LonLat(0.1142, 51.5040).transform(
            new OpenLayers.Projection("EPSG:4326"),
              map.getProjectionObject()), 14);

          var places = new OpenLayers.Layer.GeoRSS('DT places', '#{topic_path(@audience, @topic) + '.atom'}', {popupSize: new OpenLayers.Size(250, 125)});
          map.addLayer(places);
          places.events.register("loadend", places, setOverlayIcons);
        });

        function setOverlayIcons() {
          for (var i=0; i< this.features.length; i++) {
            console.log(i);
            var feature = this.features[i];
            var size   = new OpenLayers.Size(20, 30);
            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
            var icon   = new OpenLayers.Icon('/img/marker-'+i+'.gif',size,offset);
            var newdata = feature.data;
            newdata.icon = icon;
            var newfeature = new OpenLayers.Feature(this, feature.lonlat, newdata);
            var marker = newfeature.createMarker();
            marker.events.register('click', newfeature,this.markerClick);
            this.features[i] = newfeature;
            this.addMarker(marker);
            this.removeMarker(feature.marker);
          }
        }

    .span4.right-column
      .right-column-content
        %h3.dt-topic-name.visible-phone
          = @topic.name
        %form
          .dt-search-icon
            %i.icon-search
          %input.input-block-level{:type => "text", :placeholder => "What are you looking for?", :style => 'padding-left: 25px'}

        .well
          feature
        %h3.dt-topic-name.hidden-phone
          = @topic.name
        #places.accordion
          - if @topic.places.empty?
            %p Sorry: we don't have anything to show here yet.
          - else
            - @topic.places_by_name(repository).each_with_index do |place, index|
              .place.accordion-group.vcard
                %h4.accordion-heading.name
                  %a.accordion-toggle{:href => "#collapse#{index}", :'data-toggle' => 'collapse', :'data-parent' => '#places'}
                    %img.dt-marker{:src => "/img/marker-#{index}.gif", :width => '25'}
                    .dt-place-place-name.fn.org
                      = place.name
                %div{:id => "collapse#{index}", :class => "accordion-body collapse #{index != 0 ? 'in':''}"}
                  .accordion-inner
                    .clearfix
                      %img.dt-place-image{:src => place.image}
                      %address.adr
                        %a{:href => "maps:q="+place.address}= place.address
                      %p.information.note= place.information
                    .contact
                      .telephone.tel= place.telephone
                      %a.url{:href => httpify(place.url)}= place.url.length < 30 ? place.url : place.url[0, 30] + '...'
                      %br
                      %a{:href => "mailto:#{place.email}"}= place.email
                      .social
                        %a{:href => httpify(place.facebook)}
                          %img{:src => '/img/facebook.png'}
                        %a{:href => httpify(place.twitter)}
                          %img{:src => '/img/twitter.png'}
                        %a.email{:href => "mailto:#{place.email}"}
                          %img{:src => '/img/email.png'}
